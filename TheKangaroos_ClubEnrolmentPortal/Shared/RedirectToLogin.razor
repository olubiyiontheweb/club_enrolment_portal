@inject NavigationManager NavManager

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateTask;
        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUrl = NavManager.ToBaseRelativePath(NavManager.Uri);
            if (string.IsNullOrWhiteSpace(returnUrl))
            {
                NavManager.NavigateTo("/Identity/Account/Login", true);
            }
            else if (returnUrl == "landing")
            {
                NavManager.NavigateTo("/landing", true);
            }
            else
            {
                NavManager.NavigateTo($"/Identity/Account/Login?returnUrl=/{returnUrl}", true);
            }
        }
    }
}